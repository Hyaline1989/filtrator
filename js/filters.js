// –§–£–ù–ö–¶–ò–ò –§–ò–õ–¨–¢–†–ê–¶–ò–ò –° –£–ß–ï–¢–û–ú –ê–ö–¢–£–ê–õ–¨–ù–´–• –í–ê–ö–ê–ù–°–ò–ô
function filterAndDisplayObjects() {
    const ageInput = document.getElementById('age');
    const genderSelect = document.getElementById('gender');
    const nationalitySelect = document.getElementById('nationality');
    const convictionSelect = document.getElementById('hasConviction');
    const resultsContainer = document.getElementById('results');
    const resultsCount = document.getElementById('resultsCount');

    const selectedAge = parseInt(ageInput.value);
    const selectedGender = genderSelect.value;
    const selectedNationality = nationalitySelect.value;
    const selectedHasConviction = convictionSelect.value === 'true';

    const filteredObjects = objects.filter(obj => {
        if (!obj.visible) return false;
        
        // –ë–∞–∑–æ–≤—ã–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
        const ageMatch = selectedAge >= obj.ageMin && selectedAge <= obj.ageMax;
        const genderMatch = obj.allowedGenders.includes(selectedGender);
        const nationalityMatch = obj.allowedNationalities.includes(selectedNationality);
        let convictionMatch;
        if (selectedHasConviction) {
            convictionMatch = obj.allowsConviction === true;
        } else {
            convictionMatch = true;
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑–æ–≤—ã–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏
        if (!ageMatch || !genderMatch || !nationalityMatch || !convictionMatch) {
            return false;
        }

        // –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê: –µ—Å—Ç—å –ª–∏ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –≤–∞–∫–∞–Ω—Å–∏–∏ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–ª–∞
        const vacancyStats = getVacancyStats(obj.name);
        
        if (selectedGender === '–º—É–∂—á–∏–Ω–∞' && vacancyStats.men === 0) {
            return false; // –ù–µ—Ç –≤–∞–∫–∞–Ω—Å–∏–π –¥–ª—è –º—É–∂—á–∏–Ω
        }
        
        if (selectedGender === '–∂–µ–Ω—â–∏–Ω–∞' && vacancyStats.women === 0) {
            return false; // –ù–µ—Ç –≤–∞–∫–∞–Ω—Å–∏–π –¥–ª—è –∂–µ–Ω—â–∏–Ω
        }

        return true;
    });

    displayResults(filteredObjects, resultsContainer, resultsCount);
}

function displayResults(objectsToDisplay, resultsContainer, resultsCount) {
    resultsContainer.innerHTML = '';
    
    const sortedObjects = objectsToDisplay.sort((a, b) => {
        if (a.priority && !b.priority) return -1;
        if (!a.priority && b.priority) return 1;
        
        const indexA = globalOrder.indexOf(a.id);
        const indexB = globalOrder.indexOf(b.id);
        return indexA - indexB;
    });

    const priorityCount = sortedObjects.filter(obj => obj.priority).length;
    const totalCount = sortedObjects.length;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –≤–∞–∫–∞–Ω—Å–∏—è–º
    const selectedGender = document.getElementById('gender').value;
    let vacancyFilterInfo = '';
    if (selectedGender === '–º—É–∂—á–∏–Ω–∞') {
        vacancyFilterInfo = ' (–ø–æ–∫–∞–∑–∞–Ω—ã —Ç–æ–ª—å–∫–æ –æ–±—ä–µ–∫—Ç—ã —Å –≤–∞–∫–∞–Ω—Å–∏—è–º–∏ –¥–ª—è –º—É–∂—á–∏–Ω)';
    } else if (selectedGender === '–∂–µ–Ω—â–∏–Ω–∞') {
        vacancyFilterInfo = ' (–ø–æ–∫–∞–∑–∞–Ω—ã —Ç–æ–ª—å–∫–æ –æ–±—ä–µ–∫—Ç—ã —Å –≤–∞–∫–∞–Ω—Å–∏—è–º–∏ –¥–ª—è –∂–µ–Ω—â–∏–Ω)';
    }
    
    resultsCount.textContent = `–ù–∞–π–¥–µ–Ω–æ –æ–±—ä–µ–∫—Ç–æ–≤: ${totalCount} (${priorityCount} –≤ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–µ)${vacancyFilterInfo}`;

    if (sortedObjects.length === 0) {
        const selectedGender = document.getElementById('gender').value;
        let noResultsMessage = '‚ùå –ü–æ –∑–∞–¥–∞–Ω–Ω—ã–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º –æ–±—ä–µ–∫—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–∞.';
        
        // –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –µ—Å–ª–∏ –Ω–µ—Ç –≤–∞–∫–∞–Ω—Å–∏–π –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–ª–∞
        if (selectedGender === '–∂–µ–Ω—â–∏–Ω–∞') {
            const objectsWithWomen = objects.filter(obj => 
                obj.visible && 
                obj.allowedGenders.includes('–∂–µ–Ω—â–∏–Ω–∞') &&
                !objectsToDisplay.includes(obj)
            );
            if (objectsWithWomen.length > 0) {
                noResultsMessage = '‚ùå –ù–∞ –¥–∞–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–∞—Ö —Å–µ–π—á–∞—Å –Ω–µ—Ç –≤–∞–∫–∞–Ω—Å–∏–π –¥–ª—è –∂–µ–Ω—â–∏–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π –ø–æ–ª –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–∑–∂–µ.';
            }
        } else if (selectedGender === '–º—É–∂—á–∏–Ω–∞') {
            const objectsWithMen = objects.filter(obj => 
                obj.visible && 
                obj.allowedGenders.includes('–º—É–∂—á–∏–Ω–∞') &&
                !objectsToDisplay.includes(obj)
            );
            if (objectsWithMen.length > 0) {
                noResultsMessage = '‚ùå –ù–∞ –¥–∞–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–∞—Ö —Å–µ–π—á–∞—Å –Ω–µ—Ç –≤–∞–∫–∞–Ω—Å–∏–π –¥–ª—è –º—É–∂—á–∏–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π –ø–æ–ª –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–∑–∂–µ.';
            }
        }
        
        resultsContainer.innerHTML = `<div class="no-results">${noResultsMessage}</div>`;
    } else {
        sortedObjects.forEach((obj, index) => {
            const vacancyStats = getVacancyStats(obj.name);
            const card = document.createElement('div');
            card.className = `object-card ${obj.priority ? 'priority-card' : ''}`;
            card.setAttribute('data-id', obj.id);
            
            const orderNumber = currentAccessLevel === "admin" ? `<span class="order-badge">${index + 1}</span>` : '';
            const dragHandle = currentAccessLevel === "admin" ? '<div class="drag-handle-main">‚ãÆ‚ãÆ</div>' : '';
            
            card.innerHTML = `
                ${dragHandle}
                ${obj.priority ? '<div class="priority-badge">üöÄ –í –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–µ</div>' : ''}
                <h3>${orderNumber}<a href="${obj.link}" target="_blank">${obj.name}</a></h3>
                
                <div class="vacancy-stats">
                    <div class="vacancy-stat">
                        <div class="vacancy-value vacancy-men">${vacancyStats.men}</div>
                        <div class="vacancy-label">–ú—É–∂—á–∏–Ω—ã</div>
                    </div>
                    <div class="vacancy-stat">
                        <div class="vacancy-value vacancy-women">${vacancyStats.women}</div>
                        <div class="vacancy-label">–ñ–µ–Ω—â–∏–Ω—ã</div>
                    </div>
                    <div class="vacancy-stat">
                        <div class="vacancy-value vacancy-family">${vacancyStats.family}</div>
                        <div class="vacancy-label">–°–µ–º—å–∏</div>
                    </div>
                </div>
                
                ${debugMode ? `<div style="font-size: 10px; color: #666; margin-top: 5px;">–ò—Å—Ç–æ—á–Ω–∏–∫: ${vacancyStats.rawName || '–Ω–µ –Ω–∞–π–¥–µ–Ω'}</div>` : ''}
                
                <p><strong>–í–æ–∑—Ä–∞—Å—Ç:</strong> ${obj.ageMin} - ${obj.ageMax} –ª–µ—Ç</p>
                <p><strong>–ü–æ–ª:</strong> ${obj.allowedGenders.join(', ')}</p>
                <p><strong>–ì—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–æ:</strong> ${obj.allowedNationalities.join(', ')}</p>
                <p><strong>–°—É–¥–∏–º–æ—Å—Ç—å:</strong> ${obj.allowsConviction ? '‚úÖ –ü—Ä–∏–Ω–∏–º–∞—é—Ç' : '‚ùå –ù–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç'}</p>
                <div class="link">
                    <a href="${obj.link}" target="_blank">üìä –û—Ç–∫—Ä—ã—Ç—å —Ç–∞–±–ª–∏—Ü—É —Å –≤–∞–∫–∞–Ω—Å–∏—è–º–∏ ‚Üí</a>
                </div>
            `;
            resultsContainer.appendChild(card);
        });
    }
}