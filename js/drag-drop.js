// –§–£–ù–ö–¶–ò–ò –î–õ–Ø –ü–ï–†–ï–¢–ê–°–ö–ò–í–ê–ù–ò–Ø
function initDragAndDrop() {
    if (currentAccessLevel !== "admin") return;
    
    // –ü–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–µ –≤ –º–µ–Ω—é
    const menuItems = document.getElementById('menuItems');
    if (menuItems) {
        new Sortable(menuItems, {
            handle: '.drag-handle',
            animation: 150,
            ghostClass: 'sortable-ghost',
            chosenClass: 'sortable-chosen',
            dragClass: 'sortable-drag',
            onEnd: function(evt) {
                updateMenuOrder();
            }
        });
    }
    
    // –ü–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–µ–∫ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö
    const resultsContainer = document.getElementById('results');
    if (resultsContainer) {
        new Sortable(resultsContainer, {
            handle: '.drag-handle-main',
            animation: 150,
            ghostClass: 'sortable-ghost',
            chosenClass: 'sortable-chosen',
            dragClass: 'sortable-drag',
            onEnd: function(evt) {
                updateGlobalOrderFromCards();
            }
        });
    }
}

function updateMenuOrder() {
    const menuItems = document.getElementById('menuItems');
    const newOrder = Array.from(menuItems.children).map(item => 
        parseInt(item.getAttribute('data-id'))
    );
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫
    globalOrder = newOrder;
    hasUnsavedChanges = true;
    updateSaveButtonState();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –Ω–æ–º–µ—Ä–∞ –≤ –º–µ–Ω—é
    fillMenuWithObjects();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    filterAndDisplayObjects();
}

function updateGlobalOrderFromCards() {
    const resultsContainer = document.getElementById('results');
    const visibleObjects = Array.from(resultsContainer.children).map(card => 
        parseInt(card.getAttribute('data-id'))
    );
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ—Ä—è–¥–æ–∫ —Ç–æ–ª—å–∫–æ –¥–ª—è –≤–∏–¥–∏–º—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
    const hiddenObjects = globalOrder.filter(id => !visibleObjects.includes(id));
    globalOrder = [...visibleObjects, ...hiddenObjects];
    hasUnsavedChanges = true;
    updateSaveButtonState();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –º–µ–Ω—é
    fillMenuWithObjects();
}

function saveGlobalOrder() {
    saveGlobalOrderToServer();
}

function resetGlobalOrder() {
    if (currentAccessLevel !== "admin") return;
    
    if (confirm("–°–±—Ä–æ—Å–∏—Ç—å –ø–æ—Ä—è–¥–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤ –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É?")) {
        globalOrder = objectsBase.map(obj => obj.id);
        hasUnsavedChanges = true;
        updateSaveButtonState();
        fillMenuWithObjects();
        filterAndDisplayObjects();
        updateSyncStatus('üîÑ –ü–æ—Ä—è–¥–æ–∫ —Å–±—Ä–æ—à–µ–Ω (–Ω–µ –∑–∞–±—É–¥—å—Ç–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å!)');
    }
}